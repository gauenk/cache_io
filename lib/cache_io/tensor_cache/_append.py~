
def append_tensor_cache(root,fieldname,data,dim=2,overwrite=False):
    path = root / fieldname
    if not path.exists(): path.mkdir(parents=True)
    if overwrite is False:
        names = get_tensor_cache_names(path,data)
        r_data = read_tensor_cache(path,names)
        for name,r_value in data.items():
            data[name] = torch.cat([r_value,data[name]],dim=dim)
    write_tensor_cache(path,data)
    return str(path)
